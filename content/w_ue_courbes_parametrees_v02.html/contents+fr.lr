_slug: 48/w_ue_courbes_parametrees_v02.html
---
redirects: W_UE_Courbes_paramétrées_v02.html
---
title: Tracer des courbes paramétrées avec {{ sage }}
---
content:

<h1 align="center">Tracer des courbes paramétrées avec {{ sage }}
</h1>
<h3 align="center" style="font-size: 0.6em">auteur : Philippe Saadé (2008), psaade@gmail.com
</h3>
<br><br>


<div class="bodypadding">Nous présentons ici différentes méthodes permettant de tracer des courbes paramétrées dans le plan et dans l'espace (courbes gauches).
<br>
<br>
Nous détaillons autant que possible les paramètres controlant le tracé (couleur, épaisseur, type de trait, ...) ainsi que ceux contrôlant le graphique qui en résulte. Pour une présentation encore plus approfondie des réglages et opérations possibles avec les graphiques, on pourra se reporter à la feuille de calcul <strong>Graphique_Utilisation_avancée</strong>.
</div>
<div class="bodypadding">
<em>Remarque importante</em> : nous avons fait en sorte de rendre chaque cellule indépendante des autres. Le code contenu dans une cellule peut donc être utilisé par copier-coller dans une autre feuille de calcul {{ sage }}. Le lecteur ayant une certaine habitude des langages informatiques voudra bien nous excuser pour la répétition de certaines déclarations de variable, inutile dans le contexte d'une utilisation continue de la feuille de calcul.
</div>

Plan :
<ul style="padding-left: 2em;">

<li>
<a href="#ah1">Courbes paramétrées dans le plan</a>
<ul>
<li><a href="#a1">Tracé simple, dans un repère orthonormé</a>
</li>
<li><a href="#a2">Suppression des axes du graphique</a>
</li>
<li><a href="#a3">Ajout de labels aux axes</a>
</li>
<li><a href="#a4">Utiliser un cadre pour les unités d'axes</a>
</li>
<li><a href="#a5">Contrôler la dimension du graphique final</a>
</li>

</ul>
</li>

<li>
<a href="#ah2">Courbes gauches</a>

</li>

</ul>



<a name="ah1"></a>
<h1>Courbes paramétrées dans le plan
</h1>


<a name="a1"></a>
<h3>Tracé simple, dans un repère orthonormé
</h3>


<table class="top" style="width: 100%">
  <colgroup>
   <col width="50%">
   <col width="50%">
  </colgroup>
  <tbody>
   <tr>
    <td class="leftpadding">
     <pre class="code">
 sage: <strong>t = var('t')</strong>
 sage: <strong>p = parametric_plot( (sin(t), sin(2*t)),
    0, 2*pi, rgbcolor=hue(0.6) )</strong>
 sage: <strong>p.show(aspect_ratio=1)</strong>
</pre>
     <pre class="code-ans">
</pre>
    </td>
    <td class="rightpadding">
     Il faut donner la fonction à tracer comme un couple (x(t),y(t)) ou bien comme une liste [x(t),y(t)]. Ensuite, il faut indiquer les valeurs minimale et maximale d'évolution du paramètre.<br>
L'option <span class="code">rgbcolor</span> permet bien sûr de choisir la couleur.

    </td>
   </tr>
<tr>
<td class="bodypadding" colspan="2">
 <div class="txt center">
  <img src="./pix2/img_0.png" alt="">
</div>

</td>
</tr>
</tbody>
</table>


<a name="a2"></a>
<h3>Suppression des axes du graphique
</h3>

<table class="top" style="width: 100%">
  <colgroup>
   <col width="50%">
   <col width="50%">
  </colgroup>
  <tbody>
   <tr>
    <td class="leftpadding">
     <pre class="code">
 sage: <strong>t = var('t')</strong>
 sage: <strong>p = parametric_plot( [sin(t), sin(4*t)],
    0, 2*pi, rgbcolor=hue(0.4) )</strong>
 sage: <strong>p.show(aspect_ratio=1, axes=False)</strong>
</pre>
     <pre class="code-ans">
</pre>
    </td>
    <td class="rightpadding">
     La présence ou non des axes du repère est déterminée par la valeur booléenne de l'option <span class="code">axes</span>.

    </td>
   </tr>
<tr>
<td class="bodypadding" colspan="2">
 <div class="txt center">
  <img src="./pix2/img_1.png" alt="">
</div>

</td>
</tr>
</tbody>
</table>


<a name="a3"></a>
<h3>Ajout de labels aux axes
</h3>


<table class="top" style="width: 100%">
  <colgroup>
   <col width="50%">
   <col width="50%">
  </colgroup>
  <tbody>
   <tr>
    <td class="leftpadding">
     <pre class="code">
 sage: <strong>t = var('t')</strong>
 sage: <strong>p = parametric_plot( [t*cos(4*t), t*sin(
   4*t)], 0, pi, rgbcolor=hue(0.2) )</strong>
 sage: <strong>p.show(aspect_ratio=1, axes_labels=['axe
    des x','axe des $y$'])</strong>
</pre>
     <pre class="code-ans">
</pre>
    </td>
    <td class="rightpadding">
     On utilise pour cela l'option <span class="code">axes_labels</span> en lui affectant une liste de deux chaînes de caractères. On peut remarquer qu'il est possible d'utiliser du code LaTeX dans ces chaînes de caractères.<br>
Cependant, si l'affectation de labels aux axes doit se faire selon une exigence typographique plus soutenue, il est préférable d'utiliser la commande <span class="code">text()</span> qui permet un meilleur rendu du code mathématique et un placement libre.

    </td>
   </tr>
<tr>
<td class="bodypadding" colspan="2">
 <div class="txt center">
  <img src="./pix2/img_2.png" alt="">
</div>

</td>
</tr>
</tbody>
</table>


<a name="a4"></a>
<h3>Utiliser un cadre pour les unités d'axes
</h3>

<table class="top" style="width: 100%">
  <colgroup>
   <col width="50%">
   <col width="50%">
  </colgroup>
  <tbody>
   <tr>
    <td class="leftpadding">
     <pre class="code">
 sage: <strong>t = var('t')</strong>
 sage: <strong>p = parametric_plot( [t*cos(4*t), t*sin(
   4*t)], 0, pi, rgbcolor='red')</strong>
 sage: <strong>p.show(aspect_ratio=1, frame=True)</strong>
</pre>
     <pre class="code-ans">
</pre>
    </td>
    <td class="rightpadding">
     
    </td>
   </tr>
<tr>
<td class="bodypadding" colspan="2">
 <div class="txt center">
  <img src="./pix2/img_13.png" alt="">
</div>

</td>
</tr>
</tbody>
</table>


<table class="top" style="width: 100%">
  <colgroup>
   <col width="50%">
   <col width="50%">
  </colgroup>
  <tbody>
   <tr>
    <td class="leftpadding">
     <pre class="code">
 sage: <strong>t = var('t')</strong>
 sage: <strong>p = parametric_plot( [-t*cos(4*t), t*sin
   (4*t)], 0, pi, rgbcolor='blue' )</strong>
 sage: <strong>p.show(aspect_ratio=1, gridlines=True)</strong>
</pre>
     <pre class="code-ans">
</pre>
    </td>
    <td class="rightpadding">
     
    </td>
   </tr>
<tr>
<td class="bodypadding" colspan="2">
 <div class="txt center">
  <img src="./pix2/img_11.png" alt="">
</div>

</td>
</tr>
</tbody>
</table>


<a name="a5"></a>
<h3>Contrôler la dimension du graphique final
</h3>


<table class="top" style="width: 100%">
  <colgroup>
   <col width="50%">
   <col width="50%">
  </colgroup>
  <tbody>
   <tr>
    <td class="leftpadding">
     <pre class="code">
 sage: <strong>t = var('t')</strong>
 sage: <strong>p = parametric_plot( [cos(t)*cos(4*t), s
   in(t)*sin(4*t)], 0, pi, rgbcolor=hue(0.8
   ))</strong>
 sage: <strong>p.show(figsize=[4,3], dpi=200)</strong>
</pre>
     <pre class="code-ans">
</pre>
    </td>
    <td class="rightpadding">
     Il faut distinguer ici le pixel (ou point graphique) du point typographique. Une convention ancienne veut que le point typographique occupe environ 1/72ème de pouce. La résolution par défaut des graphiques produits par {{ sage }} est de 100dpi (pixels par pouce). Le point typographique est donc généralement un peu plus grand qu'un pixel. Comme le paramètre <span class="code">figsize</span> permet d'imposer la taille du graphique final en pouce, il est facile de conjuguer <span class="code">figsize</span> et <span class="code">dpi</span> pour fixer le taille de l'image en pixels.<br>
<br>
C'est ce que nous avons pour obtenir ici une image de 800x600 pixels.<br>
<br>
On remarque cependant que le trait utilisé pour le tracé est deux fois plus épais.

    </td>
   </tr>
<tr>
<td class="bodypadding" colspan="2">
 <div class="txt center">
  <img src="./pix2/img_3.png" alt="">
</div>

</td>
</tr>
</tbody>
</table>



<table class="top" style="width: 100%">
  <colgroup>
   <col width="50%">
   <col width="50%">
  </colgroup>
  <tbody>
   <tr>
    <td class="leftpadding">
     <pre class="code">
 sage: <strong>t = var('t')</strong>
 sage: <strong>fx = lambda t: t</strong>
 sage: <strong>fy = lambda t: 0</strong>
 sage: <strong>p = parametric_plot( [fx,fy], 0, pi, thi
   ckness=72)</strong>
 sage: <strong>p.show(figsize=[4,3], dpi=100)</strong>
</pre>
     <pre class="code-ans">
</pre>
    </td>
    <td class="rightpadding">
     Pour être complet, on pourra rappeler que l'option <span class="code">thickness</span> de la commande <span class="code">parametric_plot()</span> utilise le point typographique comme unitée. Ainsi, si <span class="code">thickness=72</span>, le trait aura une épaisseur d'un pouce, et donc de 100 pixels si <span class="code">dpi=100</span><br/>
C'est ce que l'on peut constater dans cet exemple.

    </td>
   </tr>
<tr>
<td class="bodypadding" colspan="2">
 <div class="txt center">
  <img src="./pix2/img_4.png" alt="">
</div>

</td>
</tr>
</tbody>
</table>


<a name="ah2"></a>
<h1>Courbes gauches
</h1>


<table class="top" style="width: 100%">
  <colgroup>
   <col width="50%">
   <col width="50%">
  </colgroup>
  <tbody>
   <tr>
    <td class="leftpadding">
     <pre class="code">
 sage: <strong>t = var('t')</strong>
 sage: <strong>p = parametric_plot3d( [cos(4*t), sin(4*
   t),cos(10*t)], (0, pi), rgbcolor='orange
   ' )</strong>
 sage: <strong>p.show(viewer='tachyon',aspect_ratio=[1,
   1,1], axes=True)</strong>
</pre>
     <pre class="code-ans">
</pre>
    </td>
    <td class="rightpadding">
     Il faut utiliser la commande <span class="code">parametric_plot3d</span> au lieu de <span class="code">parametric_plot</span>. Plusieurs des options précédentes fonctionnent encore avec cette commande.

    </td>
   </tr>
<tr>
<td class="bodypadding" colspan="2">
 <div class="txt center">
  <img src="./pix2/img_9.png" alt="">
</div>

</td>
</tr>
</tbody>
</table>


<table class="top">
  <colgroup>
   <col width="50%">
   <col width="50%">
  </colgroup>
  <tbody>
   <tr>
    <td class="leftpadding">
     <pre class="code">
 sage: <strong></strong>
</pre>
     <pre class="code-ans">
</pre>
    </td>
    <td class="rightpadding">
     
    </td>
   </tr>
</tbody>
</table>
